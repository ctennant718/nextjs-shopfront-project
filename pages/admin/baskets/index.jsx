import Head from "next/head";
import Link from "next/link";

import { dehydrate, QueryClient } from "@tanstack/react-query";
import { fetchBaskets } from "@/lib/api-functions/server/baskets/queries";
import { STORAGE_KEY } from "@/lib/tq/baskets/settings";

import { Button } from "@/components/mui";
import Layout from "@/components/Layout";
import Heading from "@/components/Heading";
import QueryBoundaries from "@/components/QueryBoundaries";
import BasketList from "@/components/BasketList";
import { useDelete } from "@/lib/tq/baskets/mutations";

export default function AdminBasketList() {
  const removeMutation = useDelete();
  const removeHandler = (id) => {
    removeMutation.mutate(id);
  };
  return (
    <>
      <Head>
        <title>Admin: Baskets List</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Heading component="h2">Baskets</Heading>
        <Button
          variant="contained"
          component={Link}
          href={`/admin/baskets/add`}
        >
          Add Basket
        </Button>
        <QueryBoundaries>
          <BasketList deleteHandler={removeHandler} />
        </QueryBoundaries>
      </Layout>
    </>
  );
}

export async function getStaticProps(context) {
  const baskets = await fetchBaskets().catch((err) => console.log(err));
  const queryClient = new QueryClient();

  // If this was remote we'd use 'prefetchQuery'
  await queryClient.setQueryData(
    [STORAGE_KEY],
    JSON.parse(JSON.stringify(baskets)),
  );

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
}
